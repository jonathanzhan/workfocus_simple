<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mfnets.workfocus.modules.sys.dao.UserDao">
	
	<!-- <resultMap id="userResult" type="User">
		<id property="id" column="id" />
		<result property="company.id" column="company.id" />
		<result property="office.id" column="office.id" />
		<result property="loginName" column="login_name" />
		<result property="password" column="password" />
		<result property="no" column="no" />
		<result property="name" column="name" />
		<result property="email" column="email" />
		<result property="phone" column="phone" />
		<result property="mobile" column="mobile" />
		<result property="userType" column="user_type" />
		<result property="loginIp" column="login_ip" />
		<result property="loginDate" column="login_date" />
		<result property="remarks" column="remarks" />
		<result property="loginFlag" column="loginFlag" />
		<result property="photo" column="photo" />
		<result property="createBy.id" column="createBy.id" />
		<result property="createDate" column="create_date" />
		<result property="updateBy.id" column="updateBy.id" />
		<result property="updateDate" column="update_date" />
		<result property="company.name" column="company.name" />
		<result property="company.parentId" column="company.parentId" />
		<result property="company.parentIds" column="company.parentIds" />
		<result property="company.area.id" column="company.area.id" />
		<result property="company.area.name" column="company.area.name" />
		<result property="company.area.parentId" column="company.area.parentId" />
		<result property="company.area.parentIds" column="company.area.parentIds" />
		<result property="company.primaryPerson.id" column="company.primaryPerson.id" />
		<result property="company.primaryPerson.name" column="company.primaryPerson.name" />
		<result property="company.deputyPerson.id" column="company.deputyPerson.id" />
		<result property="company.deputyPerson.name" column="company.deputyPerson.name" />
		<result property="office.name" column="office.name" />
		<result property="office.parentId" column="office.parentId" />
		<result property="office.parentIds" column="office.parentIds" />
		<result property="office.area.id" column="office.area.id" />
		<result property="office.area.name" column="office.area.name" />
		<result property="office.area.parentId" column="office.area.parentId" />
		<result property="office.area.parentIds" column="office.area.parentIds" />
		<result property="office.primaryPerson.id" column="office.primaryPerson.id" />
		<result property="office.primaryPerson.name" column="office.primaryPerson.name" />
		<result property="office.deputyPerson.id" column="office.deputyPerson.id" />
		<result property="office.deputyPerson.name" column="office.deputyPerson.name" />
		<collection property="roleList" ofType="Role">
			<id property="id" column="roleList.id" />
			<result property="office.id" column="roleList.office.id" />
			<result property="name" column="roleList.name" />
			<result property="enname" column="roleList.enname" />
			<result property="roleType" column="roleList.roleType" />
			<result property="dataScope" column="roleList.dataScope" />
			<collection property="officeList" ofType="Office">
				<id property="id" column="roleList.officeList.id" />
			</collection>
		</collection>
	</resultMap> -->
	
    <sql id="userColumns">
    	a.id,
    	a.user_name,
    	a.name,
    	a.password,
		a.user_type,
		a.img,
		a.creator,
		a.create_at,
	  	a.lastloginat,
	  	a.lastloginip,
		a.employee_id as "employee.id",
		b.employee_cd as "employee.employeeCd",
		b.employee_cnm as "employee.employeeCnm",
		b.employee_enm as "employee.employeeEnm",
		b.email as  "employee.email",
		b.tel as  "employee.tel",
		b.org_id as "employee.org.id",
		d.code as "employee.org.code",
		d.name as "employee.org.name",
		b.job_id as "employee.job.id",
		e.job_name as "employee.job.jobName"
    </sql>
    
    <sql id="userJoins">
		LEFT JOIN sys_employee b ON a.employee_id = b.id
		LEFT JOIN sys_org d ON b.org_id = d.id
		LEFT JOIN sys_job e ON b.job_id = e.id
		<!--JOIN sys_office c ON c.id = a.company_id-->
		<!--JOIN sys_area ca ON ca.id = c.area_id-->
		<!--JOIN sys_office o ON o.id = a.office_id-->
		<!--JOIN sys_area oa ON oa.id = o.area_id-->
		<!--LEFT JOIN sys_user cu ON cu.id = c.primary_person-->
		<!--LEFT JOIN sys_user cu2 ON cu2.id = c.deputy_person-->
		<!--LEFT JOIN sys_user ou ON ou.id = o.primary_person-->
		<!--LEFT JOIN sys_user ou2 ON ou2.id = o.deputy_person&lt;!&ndash; -->
		<!--LEFT JOIN sys_userrole ur ON ur.user_id = a.id-->
        <!--LEFT JOIN sys_role r ON r.id = ur.role_id &ndash;&gt;-->
    </sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.id = #{id}
	</select>
	
	<!-- 根据登录名查询用户 -->
	<select id="getByLoginName" resultType="User" parameterType="User">
		SELECT
			<include refid="userColumns"/><!-- ,
			ro.office_id AS "roleList.officeList.id" -->
		FROM sys_user a
		<include refid="userJoins"/><!-- 
		LEFT JOIN sys_role_office ro ON ro.role_id = r.id -->
		WHERE a.user_name = #{userName} AND a.is_enabled = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 分页查询用户信息 -->
	<select id="findList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		<if test="role != null and role.id != null and role.id != ''">
			JOIN sys_userrole ur ON ur.user_id = a.id AND ur.role_id = #{role.id}
		</if>
		<if test="employee != null and employee.org !=null and employee.org.id != null and employee.org.id != ''">
				AND (d.id = #{employee.org.id} OR d.parent_ids LIKE
				<if test="dbName == 'oracle'">'%,'||#{employee.org.id}||',%')</if>
				<if test="dbName == 'mysql'">CONCAT('%,', #{employee.org.id}, ',%'))</if>
		</if>

		WHERE a.is_enabled = #{DEL_FLAG_NORMAL}
		<!--<if test="company != null and company.id != null and company.id != ''">-->
			<!--AND (c.id = #{company.id} OR c.parent_ids LIKE -->
					<!--<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if>-->
					<!--<if test="dbName == 'mssql'">'%,'+#{company.id}+',%')</if>-->
					<!--<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if>-->
		<!--</if>-->
		<!--<if test="office != null and office.id != null and office.id != ''">-->
			<!--AND (o.id = #{office.id} OR o.parent_ids LIKE -->
					<!--<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if>-->
					<!--<if test="dbName == 'mssql'">'%,'+#{office.id}+',%')</if>-->
					<!--<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if>-->
		<!--</if>-->
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
		<if test="!currentUser.admin">
			AND a.id != '1'
		</if>
		<if test="userName != null and userName != ''">
			AND a.user_name like
					<if test="dbName == 'oracle'">'%'||#{userName}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{userName}+'%'</if>
					<if test="dbName == 'mysql'">CONCAT('%', #{userName}, '%')</if>
		</if>
		<if test="name != null and name != ''">
			AND a.name like
			<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
			<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
			<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if>
		</if>
		<if test="userType !=null and userType !=''">
			AND a.user_type = #{userType}
		</if>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.id
			</otherwise>
		</choose>
	</select>

	
	<!-- 查询全部用户 -->
	<select id="findAllList" resultType="User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.is_enabled = #{DEL_FLAG_NORMAL}
		ORDER BY a.id
	</select>
	
	<!-- 查询全部用户数目 -->
	<select id="findAllCount" resultType="long">
		SELECT
			COUNT(1)
		FROM sys_user a
		WHERE a.is_enabled = #{DEL_FLAG_NORMAL}
	</select>
	
	<!-- 插入用户 -->
	<insert id="insert">
		INSERT INTO sys_user(
			id,
			employee_id,
			user_name,
			name,
			password, 
			user_type,
			creator,
			create_at,
			modifier,
			modify_at,
			img,
			is_enabled
		) VALUES (
			#{id},
			#{employee.id},
			#{userName},
			#{name},
			#{password},
			#{userType}, 
			#{creator.id},
			#{createAt},
			#{modifier.id},
			#{modifyAt},
			#{img},
			#{isEnabled}
		)
	</insert>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET
			employee_id = #{employee.id},
			user_name = #{userName},
			name = #{name},
			password = #{password},
			user_type = #{userType},
			modifier = #{modifier.id},
			modify_at = #{modifyAt},
			img = #{img}
		WHERE id = #{id}
	</update>
	
	<!-- 删除用户和角色关联表数据 -->
	<delete id="deleteUserRole">
		DELETE FROM sys_userrole WHERE user_id = #{id}
	</delete>
	
	<!-- 插入用户和角色关联表数据 -->
	<insert id="insertUserRole">
		INSERT INTO sys_userrole(user_id, role_id)
		<foreach collection="roleList" item="role" separator=" union all ">
			SELECT #{id}, #{role.id}
			<if test="dbName != 'mssql'">
			FROM dual
			</if>
		</foreach>
	</insert>
	
	<!-- 更新用户信息  -->
	<update id="updateUserInfo">
		UPDATE sys_user SET
			user_name= #{userName},
			img = #{img},
			modifier = #{modifier.id},
			modify_at = #{modifyAt}
		WHERE id = #{id}
	</update>
	
	<!-- 更新用户密码 -->
	<update id="updatePasswordById">
		UPDATE sys_user SET
			password = #{password},
			modifier = #{modifier.id},
			modify_at = #{modifyAt}
		WHERE id = #{id}
	</update>
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE sys_user SET
			lastLoginIp = #{lastLoginIp},
			lastLoginAt = #{lastLoginAt},
			thisLoginIp = #{thisLoginIp},
			thisLoginAt = #{thisLoginAt}
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除用户 -->
	<update id="delete">
		UPDATE sys_user SET 
			is_enabled = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>