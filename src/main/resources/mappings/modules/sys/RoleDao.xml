<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mfnets.workfocus.modules.sys.dao.RoleDao">
    
    <resultMap id="roleResult" type="Role">
		<id property="id" column="id" />
		<result property="name" column="name" />
		<result property="ename" column="ename" />
		<result property="isSys" column="is_sys" />
		<result property="roleType" column="role_type" />
		<!--<collection property="userList" ofType="User">-->
			<!--<id property="id" column="userList.id" />-->
			<!--<id property="username" column="userList.userName" />-->
			<!--<id property="name" column="userList.name" />-->
			<!--<id property="usertype" column="userList.userType" />-->
			<!--&lt;!&ndash;<id property="office.name" column="userList.office.name" />&ndash;&gt;-->
			<!--&lt;!&ndash;<id property="company.name" column="userList.company.name" />&ndash;&gt;-->
		<!--</collection>-->
		<collection property="menuList" ofType="Menu">
			<id property="id" column="menuList.id" />
		</collection>
	</resultMap>
	
    <sql id="roleColumns">
    	a.id,
    	a.name,
    	a.ename,
    	a.is_sys,
    	a.role_type
    </sql>
    
	<select id="get" resultMap="roleResult">
		SELECT
			<include refid="roleColumns"/>,<!-- 
			ur.user_id AS "userList.id",
			u.login_name AS "userList.loginName",
			u.name AS "userList.name",
			u.email AS "userList.email",
			u.phone AS "userList.phone",
			u.mobile AS "userList.mobile",
			uc.name AS "userList.company.name",
			uo.name AS "userList.office.name", -->
			rm.menu_id AS "menuList.id"
		FROM sys_role a
		<!--
		LEFT JOIN sys_userrole ur ON ur.role_id = a.id
		LEFT JOIN sys_user u ON u.id = ur.user_id
		LEFT JOIN sys_office uc ON uc.id = u.company_id
		LEFT JOIN sys_office uo ON uo.id = u.office_id -->
		LEFT JOIN sys_rolemenu rm ON rm.role_id = a.id
		WHERE a.id = #{id}
	</select>
	
	<select id="getByName" resultType="com.mfnets.workfocus.modules.sys.entity.Role">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role a
		WHERE a.name = #{name} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<select id="getByEname" resultType="com.mfnets.workfocus.modules.sys.entity.Role">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role a
		WHERE a.ename = #{ename} AND a.del_flag = #{DEL_FLAG_NORMAL}
	</select>
	
	<select id="findList" resultMap="roleResult">
		SELECT <!-- DISTINCT -->
			<include refid="roleColumns"/>
		FROM sys_role a
		LEFT JOIN sys_userrole ur ON ur.role_id = a.id
		LEFT JOIN sys_user u ON u.id = ur.user_id
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="user != null and user.id != null and user.id != ''">
			AND u.id = #{user.id}
		</if>
		<if test="user != null and user.loginName != null and user.loginName != ''">
			AND u.login_name = #{user.loginName}
		</if>
		<!--&lt;!&ndash; 数据范围过滤 &ndash;&gt;-->
		<!--${sqlMap.dsf}-->
		ORDER BY  a.name
	</select>
	
	<select id="findAllList" resultType="com.mfnets.workfocus.modules.sys.entity.Role">
		SELECT
			<include refid="roleColumns"/>
		FROM sys_role a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.name
	</select>
	
	<insert id="insert">
		INSERT INTO sys_role(
			id,
			name,
			ename,
			is_sys,
			del_flag,
			role_type,
			create_by,
			create_at,
			update_by,
			update_at
		) VALUES (
			#{id},
			#{name},
			#{ename},
			#{isSys},
			#{delFlag},
			#{roleType},
			#{createBy.id},
			#{createAt},
			#{updateBy.id},
			#{updateAt}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_role SET
			name = #{name},
			ename = #{ename},
			is_sys = #{isSys},
			role_type = #{roleType},
			update_by = #{updateBy.id},
			update_at = #{updateAt}
		WHERE id = #{id}
	</update>
	
	<delete id="deleteRoleMenu">
		DELETE FROM sys_rolemenu WHERE role_id = #{id}
	</delete>
	
	<insert id="insertRoleMenu">
		INSERT INTO sys_rolemenu(role_id, menu_id)
		<foreach collection="menuList" item="menu" separator=" union all ">
			SELECT #{id}, #{menu.id}
			<if test="dbName != 'mssql'">
			FROM dual
			</if>
		</foreach>
	</insert>


	
	<update id="delete">
		UPDATE sys_role SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>