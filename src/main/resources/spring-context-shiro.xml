<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
	default-lazy-init="true">

	<description>Shiro Configuration</description>

    <!-- 加载配置属性文件 -->
	<context:property-placeholder ignore-unresolvable="true" location="classpath:workfocus.properties" />
	
	<!-- Shiro权限过滤过滤器定义 -->
	<bean name="shiroFilterChainDefinitions" class="java.lang.String">
		<constructor-arg>
			<value>
				/static/** = anon
				/userfiles/** = anon
				/service/** = anon
				${adminPath}/demo/** = anon
				${adminPath}/login = authc
				${adminPath}/logout = logout
				${adminPath}/** = user
				<!--/act/rest/editor/** = perms[act:model:edit]-->
				<!--/act/rest/model/** = perms[act:model:edit]-->
				/act/rest/** = user
				/api/** = statelessAuthc
			</value>
		</constructor-arg>
	</bean>
	
	<!-- 安全认证过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="${adminPath}/login" />
		<property name="successUrl" value="${adminPath}?login" />
		<property name="filters">
            <map>
				<!-- Web Application 过滤器 -->
				<entry key="authc" value-ref="formAuthenticationFilter"/>
				<!-- Web Service 过滤器 -->
				<entry key="statelessAuthc" value-ref="statelessAuthcFilter"/>
            </map>
        </property>
		<property name="filterChainDefinitions">
			<ref bean="shiroFilterChainDefinitions"/>
		</property>
	</bean>

	<!-- 一种token只使用一个realm策略bean -->
	<bean id="firstExceptionStrategy"
		  class="com.mfnets.workfocus.modules.sys.security.FirstExceptionStrategy"/>

	<bean id="multiSessionStorageEvaluator"
		  class="com.mfnets.workfocus.modules.sys.security.MultiSessionStorageEvaluator"/>

	<bean id="statelessRealm"
		  class="com.mfnets.workfocus.modules.sys.security.StatelessRealm">
		<property name="cachingEnabled" value="false"/>
	</bean>

	<!-- stateless Filter -->
	<bean id="statelessAuthcFilter"
		  class="com.mfnets.workfocus.modules.sys.security.StatelessAuthcFilter"/>

	<!-- 定义Shiro安全管理配置 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="systemAuthorizingRealm"/>
				<ref bean="statelessRealm"/>
			</list>
		</property>
		<property name="subjectDAO.sessionStorageEvaluator" ref="multiSessionStorageEvaluator"/>
		<property name="cacheManager" ref="shiroCacheManager" />
		<!-- 一种token只使用一个realm -->
		<property name="authenticator.authenticationStrategy" ref="firstExceptionStrategy"/>
		<property name="sessionManager" ref="sessionManager"/>
	</bean>

	<bean id="sessionManager" class="com.mfnets.workfocus.common.security.shiro.session.SessionManager">
		<property name="sessionDAO" ref="sessionDAO"/>

		<!-- 会话超时时间，单位：毫秒  -->
		<property name="globalSessionTimeout" value="${session.sessionTimeout}"/>

		<!-- 定时清理失效会话, 清理用户直接关闭浏览器造成的孤立会话   -->
		<property name="sessionValidationInterval" value="${session.sessionTimeoutClean}"/>
		<!--  		<property name="sessionValidationSchedulerEnabled" value="false"/> -->
		<property name="sessionValidationSchedulerEnabled" value="true"/>

		<property name="sessionIdCookie" ref="sessionIdCookie"/>
		<property name="sessionIdCookieEnabled" value="true"/>
	</bean>

	<!-- 指定本系统SESSIONID, 默认为: JSESSIONID 问题: 与SERVLET容器名冲突, 如JETTY, TOMCAT 等默认JSESSIONID,
		当跳出SHIRO SERVLET时如ERROR-PAGE容器会为JSESSIONID重新分配值导致登录会话丢失! -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="workfocus.session.id"/>
	</bean>

	<!-- 自定义Session存储容器 -->
	<!-- 	<bean id="sessionDAO" class="com.mfnets.workfocus.common.security.shiro.session.JedisSessionDAO"> -->
	<!-- 		<property name="sessionIdGenerator" ref="idGen" /> -->
	<!-- 		<property name="sessionKeyPrefix" value="${redis.keyPrefix}_session_" /> -->
	<!-- 	</bean> -->
	<bean id="sessionDAO" class="com.mfnets.workfocus.common.security.shiro.session.CacheSessionDAO">
		<property name="sessionIdGenerator" ref="idGen" />
		<property name="activeSessionsCacheName" value="activeSessionsCache" />
		<property name="cacheManager" ref="shiroCacheManager" />
	</bean>

	
	<!-- 定义授权缓存管理器 -->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	
	<!-- AOP式方法级权限检查  -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>